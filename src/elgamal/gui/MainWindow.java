/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package elgamal.gui;

import bigint.BigInt;
import elgamal.gui.GUIHelper.NoFileException;
import elgamal.services.ElGamalAlgorithm.IncompleteKeysException;
import java.util.Base64;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author marr
 */
public class MainWindow extends javax.swing.JFrame {

    private final GUIHelper helper;
    private volatile Map<String, BigInt> keys;

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        keys = new HashMap();
        helper = new GUIHelper();
        initLookAndFeel();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonReadFile = new javax.swing.JButton();
        jLabelLoadedFile = new javax.swing.JLabel();
        jButtonEncryptFile = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonLoadCipher = new javax.swing.JButton();
        jLabelLoadedCipher = new javax.swing.JLabel();
        jButtonDecipher = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextMessage = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jButtonEncryptMessage = new javax.swing.JButton();
        jScrollPaneKeys = new javax.swing.JScrollPane();
        jTextPKey = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jButtonDecryptMessage = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPaneKeys1 = new javax.swing.JScrollPane();
        jTextYKey = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jScrollPaneKeys3 = new javax.swing.JScrollPane();
        jTextGKey = new javax.swing.JTextArea();
        jScrollPaneKeys2 = new javax.swing.JScrollPane();
        jTextXKey = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextCipherBase64 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextCipherRaw = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jButtonNewKeys = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jComboBitLength = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ElGamal");
        setResizable(false);

        jButtonReadFile.setText("Wczytaj plik");
        jButtonReadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReadFileActionPerformed(evt);
            }
        });

        jLabelLoadedFile.setText("Brak pliku");

        jButtonEncryptFile.setText("Zaszyfruj Plik i zapisz szyfrogram");
        jButtonEncryptFile.setEnabled(false);
        jButtonEncryptFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEncryptFileActionPerformed(evt);
            }
        });

        jLabel1.setText("Wygenerowane Klucze");

        jButtonLoadCipher.setText("Wczytaj szyfrogram");
        jButtonLoadCipher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadCipherActionPerformed(evt);
            }
        });

        jLabelLoadedCipher.setText("Brak Pliku");

        jButtonDecipher.setText("Odszyfruj Szyfrogram i zapisz oryginalny plik");
        jButtonDecipher.setEnabled(false);
        jButtonDecipher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDecipherActionPerformed(evt);
            }
        });

        jTextMessage.setColumns(20);
        jTextMessage.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jTextMessage.setLineWrap(true);
        jTextMessage.setRows(5);
        jScrollPane1.setViewportView(jTextMessage);

        jLabel2.setText("Wiadomość");

        jButtonEncryptMessage.setText("Zaszyfruj wiadomość");
        jButtonEncryptMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEncryptMessageActionPerformed(evt);
            }
        });

        jTextPKey.setColumns(20);
        jTextPKey.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jTextPKey.setLineWrap(true);
        jTextPKey.setRows(3);
        jScrollPaneKeys.setViewportView(jTextPKey);

        jLabel3.setText("Szyfrogram (base64)");

        jButtonDecryptMessage.setText("Odszyfruj");
        jButtonDecryptMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDecryptMessageActionPerformed(evt);
            }
        });

        jLabel4.setText("Klucz publiczny p");

        jLabel5.setText("Klucz prywatny x");

        jTextYKey.setColumns(20);
        jTextYKey.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jTextYKey.setLineWrap(true);
        jTextYKey.setRows(3);
        jScrollPaneKeys1.setViewportView(jTextYKey);

        jLabel6.setText("Klucz publiczny g");

        jTextGKey.setColumns(20);
        jTextGKey.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jTextGKey.setLineWrap(true);
        jTextGKey.setRows(1);
        jScrollPaneKeys3.setViewportView(jTextGKey);

        jTextXKey.setColumns(20);
        jTextXKey.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jTextXKey.setLineWrap(true);
        jTextXKey.setRows(3);
        jScrollPaneKeys2.setViewportView(jTextXKey);

        jLabel7.setText("Klucz publiczny y");

        jTextCipherBase64.setColumns(20);
        jTextCipherBase64.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jTextCipherBase64.setLineWrap(true);
        jTextCipherBase64.setRows(5);
        jScrollPane3.setViewportView(jTextCipherBase64);

        jTextCipherRaw.setColumns(20);
        jTextCipherRaw.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jTextCipherRaw.setLineWrap(true);
        jTextCipherRaw.setRows(5);
        jScrollPane4.setViewportView(jTextCipherRaw);

        jLabel8.setText("Szyfrogram (ory.)");
        jLabel8.setToolTipText("");

        jButtonNewKeys.setText("Wygeneruj nowe klucze");
        jButtonNewKeys.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewKeysActionPerformed(evt);
            }
        });

        jLabel9.setText("przestrzeń kluczy");

        jComboBitLength.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "512 bit", "1024 bit" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPaneKeys1, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
                                .addComponent(jScrollPaneKeys3)
                                .addComponent(jScrollPaneKeys2)
                                .addComponent(jScrollPaneKeys))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButtonDecipher, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonEncryptFile, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonLoadCipher, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonReadFile, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabelLoadedCipher, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabelLoadedFile, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(110, 110, 110)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBitLength, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(158, 158, 158)
                                .addComponent(jButtonNewKeys, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jButtonDecryptMessage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonEncryptMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(583, 583, 583)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(583, 583, 583)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonReadFile)
                            .addComponent(jLabelLoadedFile, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEncryptFile, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonLoadCipher)
                            .addComponent(jLabelLoadedCipher, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jButtonDecipher, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBitLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNewKeys, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonEncryptMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPaneKeys, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonDecryptMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPaneKeys2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPaneKeys3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPaneKeys1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonReadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReadFileActionPerformed
        try {
            jLabelLoadedFile.setText(helper.openFile(this).toString());
            jButtonEncryptFile.setEnabled(true);
        } catch (NoFileException ex) {
            jLabelLoadedFile.setText("Brak pliku");
            jButtonEncryptFile.setEnabled(false);
            JOptionPane.showMessageDialog(this, "Błąd odczytu pliku", "Błąd IO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonReadFileActionPerformed

    private void jButtonLoadCipherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadCipherActionPerformed
        try {
            jLabelLoadedCipher.setText(helper.openCipher(this).toString());
            jButtonDecipher.setEnabled(true);
        } catch (NoFileException ex) {
            jLabelLoadedFile.setText("Brak pliku");
            jButtonEncryptFile.setEnabled(false);
            JOptionPane.showMessageDialog(this, "Błąd odczytu pliku", "Błąd IO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonLoadCipherActionPerformed

    private void jButtonEncryptMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEncryptMessageActionPerformed
        try {
            byte[] cipher = helper.encryptText(jTextMessage.getText(), keys);
            jTextCipherRaw.setText(new String(cipher));
            jTextCipherBase64.setText(new String(Base64.getEncoder().encode(cipher)));
            writeKeys();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lista kluczy jest niekompletna", "Błąd kluczy", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEncryptMessageActionPerformed

    private void jButtonDecryptMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDecryptMessageActionPerformed
        try {
            readKeys();
            byte[] message = helper.decryptText(jTextCipherBase64.getText(), keys);
            jTextMessage.setText(new String(message));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lista kluczy jest niekompletna", "Błąd kluczy", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDecryptMessageActionPerformed

    private void jButtonNewKeysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewKeysActionPerformed
        if (jComboBitLength.getSelectedIndex() == 0){
            this.keys = helper.newKeys(512);
        }else if (jComboBitLength.getSelectedIndex() == 1){
            this.keys = helper.newKeys(1024);
        }
        
        writeKeys();
    }//GEN-LAST:event_jButtonNewKeysActionPerformed

    private void jButtonEncryptFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEncryptFileActionPerformed
        try {
            helper.encryptFile(this, keys);
        } catch (IncompleteKeysException ex) {
            JOptionPane.showMessageDialog(this, "Lista kluczy jest niekompletna", "Błąd kluczy", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Błąd odczytu pliku", "Błąd IO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEncryptFileActionPerformed

    private void jButtonDecipherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDecipherActionPerformed
        try {
            readKeys();
            helper.decryptCipher(this, keys);
        } catch (IncompleteKeysException ex) {
            JOptionPane.showMessageDialog(this, "Lista kluczy jest niekompletna", "Błąd kluczy", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Błąd odczytu pliku", "Błąd IO", JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_jButtonDecipherActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDecipher;
    private javax.swing.JButton jButtonDecryptMessage;
    private javax.swing.JButton jButtonEncryptFile;
    private javax.swing.JButton jButtonEncryptMessage;
    private javax.swing.JButton jButtonLoadCipher;
    private javax.swing.JButton jButtonNewKeys;
    private javax.swing.JButton jButtonReadFile;
    private javax.swing.JComboBox<String> jComboBitLength;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelLoadedCipher;
    private javax.swing.JLabel jLabelLoadedFile;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPaneKeys;
    private javax.swing.JScrollPane jScrollPaneKeys1;
    private javax.swing.JScrollPane jScrollPaneKeys2;
    private javax.swing.JScrollPane jScrollPaneKeys3;
    private javax.swing.JTextArea jTextCipherBase64;
    private javax.swing.JTextArea jTextCipherRaw;
    private javax.swing.JTextArea jTextGKey;
    private javax.swing.JTextArea jTextMessage;
    private javax.swing.JTextArea jTextPKey;
    private javax.swing.JTextArea jTextXKey;
    private javax.swing.JTextArea jTextYKey;
    // End of variables declaration//GEN-END:variables

    private void writeKeys() {
        jTextPKey.setText(helper.splitHexString(keys.get("p").toHexString()));
        jTextXKey.setText(helper.splitHexString(keys.get("x").toHexString()));
        jTextGKey.setText(helper.splitHexString(keys.get("g").toHexString()));
        jTextYKey.setText(helper.splitHexString(keys.get("y").toHexString()));

    }

    private Map<String, BigInt> readKeys() {
        keys.clear();
        keys.put("p", new BigInt(helper.mergeHexString(jTextPKey.getText()), 16));
        keys.put("x", new BigInt(helper.mergeHexString(jTextXKey.getText()), 16));
        keys.put("g", new BigInt(helper.mergeHexString(jTextGKey.getText()), 16));
        keys.put("y", new BigInt(helper.mergeHexString(jTextYKey.getText()), 16));
        return keys;
    }

    private static void initLookAndFeel() {
        String lookAndFeel = null;
        lookAndFeel = UIManager.getSystemLookAndFeelClassName();
        try {
            UIManager.setLookAndFeel(lookAndFeel);
        } catch (ClassNotFoundException | UnsupportedLookAndFeelException e) {
        } catch (Exception e) {
            //TODO :)
        }
    }
}
